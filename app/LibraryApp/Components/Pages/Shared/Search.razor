@page "/search-books"
@using LibraryApp.Services
@using LibraryApp.Models
@inject IBookService BookService
@inject IGenresService GenresService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Book Search</PageTitle>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <h3 class="mb-4">Search for Books</h3>
        </div>
        <AuthorizeView Roles="admin">
            <Authorized>
                <div class="col-md-6 text-end">
                    <button class="btn btn-primary" @onclick="AddNewBook">Add New Book</button>
                </div>
            </Authorized>
        </AuthorizeView>
    </div>
    
    <div class="row mb-3">
        <div class="col-md-4">
            <label for="searchType" class="form-label">Search By:</label>
            <select id="searchType" class="form-select" @bind="SearchType">
                <option value="Title">Title</option>
                <option value="Author">Author</option>
                <option value="Genre">Genre</option>
            </select>
        </div>
    </div>

    <div class="row mb-3">
        @if (SearchType == "Genre")
        {
            <div class="col-md-4">
                <label for="searchTerm" class="form-label">Select Genre:</label>
                <select id="searchTerm" class="form-select" @bind="SelectedGenreId">
                    @foreach (var genre in Genres)
                    {
                        <option value="@genre.GenreId">@genre.Name</option>
                    }
                </select>
            </div>
        }
        else
        {
            <div class="col-md-4">
                <label for="searchTerm" class="form-label">Search Term:</label>
                <input id="searchTerm" type="text" class="form-control" @bind="SearchTerm" />
            </div>
        }
    </div>

    <div class="row mb-4">
        <div class="col-md-4">
            <button class="btn btn-primary" @onclick="SearchBooksButton">Search</button>
        </div>
    </div>

    @if (SearchResults != null && SearchResults.Count > 0)
    {
        <h3 class="mb-3">Search Results</h3>
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>Title</th>
                        <th>Author</th>
                        <th>Genre</th>
                        <th>Pages</th>
                        <th>Publish Year</th>
                        <th>Availability</th>
                        <th>Branch</th>
                        <th>Branch Address</th>
                        <AuthorizeView Roles="user">
                            <Authorized>
                                <th>Make Reservation</th>
                            </Authorized>
                        </AuthorizeView>
                        <AuthorizeView Roles="admin">
                            <Authorized>
                                <th>Borrow</th>
                                <th>Edit</th>
                            </Authorized>
                        </AuthorizeView>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var book in SearchResults)
                    {
                        <tr>
                            <td>@book.Title</td>
                            <td>@book.Author</td>
                            <td>@book.Genre</td>
                            <td>@book.Pages</td>
                            <td>@book.PublishYear</td>
                            <td>@book.Availability</td>
                            <td>@book.Branch</td>
                            <td>@book.BranchAddress</td>
                            <AuthorizeView Roles="user">
                                <Authorized>
                                    <td>
                                        <button class="btn btn-sm btn-success" @onclick="() => BorrowBook(book.BookId)"
                                                disabled="@(!IsBookAvailable(book))">Reserve</button>
                                    </td>
                                </Authorized>
                            </AuthorizeView>
                            <AuthorizeView Roles="admin">
                                <Authorized>
                                    <td>
                                        <button class="btn btn-sm btn-primary" @onclick="() => BorrowBook(book.BookId)"
                                                disabled="@(!IsBookAvailable(book))">Borrow</button>
                                    </td>
                                    <td>
                                        <button class="btn btn-sm btn-warning" @onclick="() => EditBook(book.BookId)">Edit</button>
                                    </td>
                                </Authorized>
                            </AuthorizeView>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else if (SearchResults != null)
    {
        <div class="alert alert-warning" role="alert">
            No results found.
        </div>
    }
</div>

@code {
    private string SearchType = "Title";
    private string SearchTerm = string.Empty;
    private int SelectedGenreId;
    private List<Genre> Genres = new List<Genre>();
    private List<BookDetail>? SearchResults;

    protected override async Task OnInitializedAsync()
    {
        Genres = await GenresService.GetGenresAsync();
    }

    private async Task SearchBooksButton()
    {
        if (SearchType == "Genre")
        {
            var selectedGenre = Genres.FirstOrDefault(g => g.GenreId == SelectedGenreId)?.Name;
            if (!string.IsNullOrEmpty(selectedGenre))
            {
                SearchResults = await BookService.SearchBooksAsync("Genre", selectedGenre);
            }
        }
        else
        {
            SearchResults = await BookService.SearchBooksAsync(SearchType.ToLower(), SearchTerm);
        }
    }

    private void BorrowBook(int id)
    {
        NavigationManager.NavigateTo($"/borrow-book/{id}");
    }

    private void EditBook(int id)
    {
        NavigationManager.NavigateTo($"/edit-book/{id}");
    }

    private void AddNewBook() 
    {
        NavigationManager.NavigateTo("/add-book");
    }

    private bool IsBookAvailable(BookDetail book)
    {
        return book.Availability != "not available";
    }
}
