@page "/borrowed"
@using LibraryApp.Models
@using Microsoft.AspNetCore.Authorization
@inject Services.IBorrowedService BorrowedService
@inject NavigationManager NavigationManager
@attribute [Authorize(Roles = "admin")]
@rendermode InteractiveServer

<PageTitle>Borrowed</PageTitle>

<h3>Borrowed</h3>

@if (borrowedDetails == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>User</th>
                <th>Book</th>
                <th>Borrow Date</th>
                <th>Planned Return Date</th>
                <th>Return Date</th>
                <th>Charge</th>
                <AuthorizeView>
                    <Authorized>
                        <th>Edit</th>
                    </Authorized>
                </AuthorizeView>
            </tr>
        </thead>
        <tbody>
            @foreach (var borrowed in borrowedDetails)
            {
                <tr>
                    <td>@borrowed.User</td>
                    <td>@borrowed.Book</td>
                    <td>@borrowed.BorrowDate</td>
                    <td>@borrowed.PlannedReturnDate</td>
                    <td>@borrowed.ReturnDate</td>
                    <td>@borrowed.Charge</td>
                    <AuthorizeView>
                        <Authorized>
                            <td>
                                <button @onclick="() => EditBorrowed(borrowed.BorrowedId)"
                                        disabled="@(IsEntryReturned(borrowed))">Edit</button>
                            </td>
                        </Authorized>
                    </AuthorizeView>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<BorrowedDetail>? borrowedDetails;
    protected override async Task OnInitializedAsync()
    {
        borrowedDetails = await BorrowedService.GetBorrowedDetailsAsync();
    }

    private void EditBorrowed(int borrowedId) {
        NavigationManager.NavigateTo($"/edit-borrowed/{borrowedId}");
    }

    private bool IsEntryReturned(BorrowedDetail borrowed) {
        if (borrowed.ReturnDate == null) {
            return false;
        }
        return true;
    }
}
